{"ast":null,"code":"var _jsxFileName = \"/Users/vijaypanwar/PhpstormProjects/reactcondition/src/App.js\";\nimport React from \"react\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoggedIn: false\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.setState(prevState => {\n      return {\n        isLoggedIn: !prevState.isLoggedIn\n      };\n    });\n  }\n\n  render() {\n    let buttonText = this.state.isLoggedIn ? \"Log Out\" : \"Log In\";\n    return /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    }, buttonText);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/vijaypanwar/PhpstormProjects/reactcondition/src/App.js"],"names":["React","App","Component","constructor","props","state","isLoggedIn","handleClick","bind","setState","prevState","render","buttonText"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,GAAN,SAAkBD,KAAK,CAACE,SAAxB,CAAiC;AAC7BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,UAAU,EAAE;AADH,KAAb;AAGA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACH;;AAEDD,EAAAA,WAAW,GAAE;AACT,SAAKE,QAAL,CAAcC,SAAS,IAAI;AACvB,aAAO;AACHJ,QAAAA,UAAU,EAAE,CAACI,SAAS,CAACJ;AADpB,OAAP;AAGH,KAJD;AAKH;;AAEDK,EAAAA,MAAM,GAAG;AAEL,QAAIC,UAAU,GAAG,KAAKP,KAAL,CAAWC,UAAX,GAAwB,SAAxB,GAAmC,QAApD;AACA,wBACI;AAAQ,MAAA,OAAO,EAAE,KAAKC,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKK,UADL,CADJ;AAKH;;AAzB4B;;AA4BjC,eAAeX,GAAf","sourcesContent":["import React from \"react\"\n\nclass App extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoggedIn: false\n        }\n        this.handleClick = this.handleClick.bind(this)\n    }\n\n    handleClick(){\n        this.setState(prevState => {\n            return {\n                isLoggedIn: !prevState.isLoggedIn\n            }\n        })\n    }\n\n    render() {\n\n        let buttonText = this.state.isLoggedIn ? \"Log Out\": \"Log In\"\n        return (\n            <button onClick={this.handleClick}>\n                {buttonText}\n            </button>\n        )\n    }\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}