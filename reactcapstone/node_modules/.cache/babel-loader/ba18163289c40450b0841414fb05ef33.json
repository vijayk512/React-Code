{"ast":null,"code":"var _jsxFileName = \"/Users/vijaypanwar/PhpstormProjects/reactcapstone/src/MemeGenerator.js\";\nimport React from \"react\";\n\nclass MemeGenerator extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      topText: \"\",\n      bottomText: \"\",\n      randomImg: \"http://i.imgflip.com/1bij.jpg\",\n      allMemeImgs: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(\"https://api.imgflip.com/get_memes\").then(response => response.json()).then(response => {\n      const {\n        memes\n      } = response.data;\n      this.setState({\n        allMemeImgs: memes\n      });\n    });\n  }\n\n  handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"meme-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"topText\",\n      value: this.state.topText,\n      className: \"\",\n      onChange: this.handleChange,\n      placeholder: \"Top Text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"bottomText\",\n      value: this.state.bottomText,\n      className: \"\",\n      onChange: this.handleChange,\n      placeholder: \"Bottom Text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }\n    }, \"Gen\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"meme\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: this.state.randomImg,\n      align: \"\",\n      width: \"200px\",\n      height: \"auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }\n    }, this.state.topText), /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"bottom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }\n    }, this.state.bottomText)));\n  }\n\n}\n\nexport default MemeGenerator;","map":{"version":3,"sources":["/Users/vijaypanwar/PhpstormProjects/reactcapstone/src/MemeGenerator.js"],"names":["React","MemeGenerator","Component","constructor","state","topText","bottomText","randomImg","allMemeImgs","handleChange","bind","componentDidMount","fetch","then","response","json","memes","data","setState","event","name","value","target","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,aAAN,SAA4BD,KAAK,CAACE,SAAlC,CAA2C;AACvCC,EAAAA,WAAW,GAAE;AACT;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE,EADA;AAETC,MAAAA,UAAU,EAAE,EAFH;AAGTC,MAAAA,SAAS,EAAE,+BAHF;AAITC,MAAAA,WAAW,EAAE;AAJJ,KAAb;AAOA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,KAAK,CAAC,mCAAD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUC,QAAQ,IAAI;AACd,YAAM;AAACE,QAAAA;AAAD,UAAUF,QAAQ,CAACG,IAAzB;AACA,WAAKC,QAAL,CAAc;AAAEV,QAAAA,WAAW,EAAEQ;AAAf,OAAd;AACH,KALL;AAMH;;AAEDP,EAAAA,YAAY,CAACU,KAAD,EAAO;AACf,UAAM;AAACC,MAAAA,IAAD;AAAOC,MAAAA;AAAP,QAAgBF,KAAK,CAACG,MAA5B;AACA,SAAKJ,QAAL,CAAc;AACV,OAACE,IAAD,GAAQC;AADE,KAAd;AAGH;;AAEDE,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,IAAI,EAAC,SAFT;AAGI,MAAA,KAAK,EAAE,KAAKnB,KAAL,CAAWC,OAHtB;AAII,MAAA,SAAS,EAAC,EAJd;AAKI,MAAA,QAAQ,EAAE,KAAKI,YALnB;AAMI,MAAA,WAAW,EAAC,UANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAUI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,IAAI,EAAC,YAFT;AAGI,MAAA,KAAK,EAAE,KAAKL,KAAL,CAAWE,UAHtB;AAII,MAAA,SAAS,EAAC,EAJd;AAKI,MAAA,QAAQ,EAAE,KAAKG,YALnB;AAMI,MAAA,WAAW,EAAC,aANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVJ,eAmBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAnBJ,CADJ,eAuBI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,GAAG,EAAE,KAAKL,KAAL,CAAWG,SAArB;AAAgC,MAAA,KAAK,EAAC,EAAtC;AAAyC,MAAA,KAAK,EAAC,OAA/C;AAAuD,MAAA,MAAM,EAAC,MAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAI,MAAA,SAAS,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqB,KAAKH,KAAL,CAAWC,OAAhC,CAFJ,eAGI;AAAI,MAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwB,KAAKD,KAAL,CAAWE,UAAnC,CAHJ,CAvBJ,CADJ;AA+BH;;AA7DsC;;AAgE3C,eAAeL,aAAf","sourcesContent":["import React from \"react\"\n\nclass MemeGenerator extends React.Component{\n    constructor(){\n        super()\n        this.state = {\n            topText: \"\",\n            bottomText: \"\",\n            randomImg: \"http://i.imgflip.com/1bij.jpg\",\n            allMemeImgs: []\n        }\n\n        this.handleChange = this.handleChange.bind(this)\n    }\n\n    componentDidMount() {\n        fetch(\"https://api.imgflip.com/get_memes\")\n            .then(response => response.json())\n            .then(response => {\n                const {memes} = response.data\n                this.setState({ allMemeImgs: memes })\n            })\n    }\n\n    handleChange(event){\n        const {name, value} = event.target\n        this.setState({\n            [name]: value\n        })\n    }\n\n    render() {\n        return(\n            <div>\n                <form className=\"meme-form\">\n                    <input\n                        type=\"text\"\n                        name=\"topText\"\n                        value={this.state.topText}\n                        className=\"\"\n                        onChange={this.handleChange}\n                        placeholder=\"Top Text\"\n                    />\n\n                    <input\n                        type=\"text\"\n                        name=\"bottomText\"\n                        value={this.state.bottomText}\n                        className=\"\"\n                        onChange={this.handleChange}\n                        placeholder=\"Bottom Text\"\n                    />\n\n                    <button>Gen</button>\n\n                </form>\n                <div className=\"meme\">\n                    <img src={this.state.randomImg} align=\"\" width=\"200px\" height=\"auto\"/>\n                    <h2 className=\"top\">{this.state.topText}</h2>\n                    <h2 className=\"bottom\">{this.state.bottomText}</h2>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default MemeGenerator"]},"metadata":{},"sourceType":"module"}