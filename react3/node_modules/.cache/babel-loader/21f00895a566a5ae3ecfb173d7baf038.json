{"ast":null,"code":"var _jsxFileName = \"/Users/vijaypanwar/PhpstormProjects/react3/src/App.js\";\nimport React from \"react\";\nimport ToDoItem from \"./components/ToDoItem\";\nimport todoDatas from \"./components/todosData\"; // function App() {\n//         const todoData = todoDatas.map( item => {\n//                 return (\n//                     <ToDoItem key={item.id} item={item}/>\n//                 )\n//         })\n//\n//         return(\n//                 <div className=\"todo-list\">\n//                         {todoData}\n//                 </div>\n//         )\n// }\n//class components\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      todos: todoDatas\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(id) {\n    this.setState(prevState => {\n      const updatedTodos = prevState.todos.map(todo => {\n        if (todo.id === id) {\n          return { // todo.completed = !todo.completed\n            ...todo,\n            completed: !todo.completed\n          };\n        }\n\n        return todo;\n      });\n      return {\n        todos: updatedTodos\n      };\n    });\n  }\n\n  render() {\n    const todoData = this.state.todos.map(item => {\n      return /*#__PURE__*/React.createElement(ToDoItem, {\n        key: item.id,\n        item: item,\n        handleChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 29\n        }\n      });\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"todo-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }\n    }, todoData);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/vijaypanwar/PhpstormProjects/react3/src/App.js"],"names":["React","ToDoItem","todoDatas","App","Component","constructor","state","todos","handleChange","bind","id","setState","prevState","updatedTodos","map","todo","completed","render","todoData","item"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AAEA,OAAOC,SAAP,MAAsB,wBAAtB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAiC;AACzBC,EAAAA,WAAW,GAAE;AACL;AACA,SAAKC,KAAL,GAAa;AACLC,MAAAA,KAAK,EAAEL;AADF,KAAb;AAGA,SAAKM,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACP;;AAEDD,EAAAA,YAAY,CAACE,EAAD,EAAI;AACR,SAAKC,QAAL,CAAcC,SAAS,IAAI;AACnB,YAAOC,YAAY,GAAGD,SAAS,CAACL,KAAV,CAAgBO,GAAhB,CAAoBC,IAAI,IAAI;AAC1C,YAAGA,IAAI,CAACL,EAAL,KAAYA,EAAf,EAAkB;AACV,iBAAO,EACC;AACA,eAAGK,IAFJ;AAGCC,YAAAA,SAAS,EAAE,CAACD,IAAI,CAACC;AAHlB,WAAP;AAKP;;AACD,eAAOD,IAAP;AACP,OATqB,CAAtB;AAUA,aAAO;AACCR,QAAAA,KAAK,EAAEM;AADR,OAAP;AAGP,KAdD;AAeP;;AAEDI,EAAAA,MAAM,GAAG;AAED,UAAMC,QAAQ,GAAG,KAAKZ,KAAL,CAAWC,KAAX,CAAiBO,GAAjB,CAAqBK,IAAI,IAAI;AACtC,0BACI,oBAAC,QAAD;AAAU,QAAA,GAAG,EAAEA,IAAI,CAACT,EAApB;AAAwB,QAAA,IAAI,EAAES,IAA9B;AAAoC,QAAA,YAAY,EAAE,KAAKX,YAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGP,KAJgB,CAAjB;AAMA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACSU,QADT,CADJ;AAKP;;AAxCwB;;AA6CjC,eAAef,GAAf","sourcesContent":["import React from \"react\"\nimport ToDoItem from \"./components/ToDoItem\"\n\nimport todoDatas from \"./components/todosData\"\n\n// function App() {\n//         const todoData = todoDatas.map( item => {\n//                 return (\n//                     <ToDoItem key={item.id} item={item}/>\n//                 )\n//         })\n//\n//         return(\n//                 <div className=\"todo-list\">\n//                         {todoData}\n//                 </div>\n//         )\n// }\n\n//class components\nclass App extends React.Component{\n        constructor(){\n                super()\n                this.state = {\n                        todos: todoDatas\n                }\n                this.handleChange = this.handleChange.bind(this)\n        }\n\n        handleChange(id){\n                this.setState(prevState => {\n                        const  updatedTodos = prevState.todos.map(todo => {\n                                if(todo.id === id){\n                                        return {\n                                                // todo.completed = !todo.completed\n                                                ...todo,\n                                                completed: !todo.completed\n                                        }\n                                }\n                                return todo\n                        })\n                        return {\n                                todos: updatedTodos\n                        }\n                })\n        }\n\n        render() {\n\n                const todoData = this.state.todos.map(item => {\n                        return (\n                            <ToDoItem key={item.id} item={item} handleChange={this.handleChange} />\n                        )\n                })\n\n                return (\n                    <div className=\"todo-list\">\n                            {todoData}\n                    </div>\n                )\n        }\n}\n\n\n\nexport default App"]},"metadata":{},"sourceType":"module"}